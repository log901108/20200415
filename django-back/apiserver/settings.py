"""
Django settings for apiserver project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$r-$bp4i%-pql!a9$0!n#t(og_rkf(4*^7tm$7pxg1u251s!2p'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True #When using wsgi, static files are charged upon wsgi tools like gunicorn in production

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'account.apps.AccountConfig', #custom user module
    'post.apps.PostConfig', #api
    'core.apps.CoreConfig', #JWT
    'rest_framework', #drf module
    'corsheaders', #cors module
]

REST_FRAMEWORK={
    'DEFAULT_PERMISSION_CLASSES': ['rest_framework.permissions.IsAuthenticated'],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication', #JWT Authentication Setting 
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    )
}

JWT_AUTH = {
    'JWT_SECRET_KEY': SECRET_KEY, 
    'JWT_ALGORITHM': 'HS256',
    'JWT_ALLOW_REFRESH': True, #SETTING REFRESH AVAILABLE
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=7), #SETTING ACCESS TOKEN EXPIRY TIME SETTING
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=28), #SETTING REFRESH TOKEN EXPIRY TIME SETTING
    'JWT_RESPONSE_PAYLOAD_HANDLER':'apiserver.utils.my_jwt_response_handler', #CUSTOM RESPONSE HANDLER SETTING
    'JWT_PAYLOAD_HANDLER': 'apiserver.utils.my_jwt_payload_handler', #CUSTOM JWT PAYLOAD HANDLER SETTING
    #'JWT_AUTH_COOKIE': 'token', #Transfer JWT token by cookie as given name. It gives the way to authenticate without setting authorization header by default authenticate func at JWT module

}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', #cors module
    #'django.middleware.common.CommonMiddleware', #this module should be located below Cors middleware
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = False

CORS_ORIGIN_WHITELIST = (
       'https://rp2020.run.goorm.io',    #React 도메인
       'https://djangoapp.run.goorm.io',    #Django 도메인
)

ROOT_URLCONF = 'apiserver.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'apiserver.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql', #Postgresql settings
        'NAME': 'djdb',
        'USER': 'adm',
        'PASSWORD': 'hjy1234',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators
AUTH_USER_MODEL = 'account.User' #custom user

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul' #Asia/Seoul UTC+9:00 DEFAULT : UTC

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)
